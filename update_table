#!/bin/bash
##script to check if col exists or not and get its number and datatype

#cd dbs/social
while true
do

read -p "please, enter table name  or press q to exit  " table

if [[ $table == "q" ]]
then exit
fi

##level 1: check table existence
if [ -f "$table" ]
then

   read -p "please, enter column name= " col
   read -p "value = " val
   read -p "please, enter primary key of this row =  " id

val="${val//,/_}"  ##to avoid , in string

#export table col id $val
###level 2 :check if empty values entered
   if [[ $col ]] && [[ $val ]] && [[ $id ]]
   then
	declare -a all_cols=( `head -1 $table|sed 's/,/\t/g'` )
	declare  -a all_dtypes=(`head -2 $table|tail -1|sed 's/,/\t/g'` )
	declare  -a pk=(`cut -f1 -d, $table |sed 's/,/\t/g'`)
	x=0 #counter to check if col found
	c=0 #counter to check if pk found

##level 3 : check for col existence and get data type

	for ((i=0 ; i< `echo ${#all_cols[@]}` ; i++ ))
	do
		if [ $col == "${all_cols[i]}" ]
		then
		dt=${all_dtypes[i]}  ##data type of col
		let col=$i+1     ##col number
		let x=$x+1
		echo "cloumn $col found"
		break
		fi

	done
	#echo $col $dt $x
	if [ $x == "0" ]
	then
	echo "ERROR : sorry,$col not exists"
	continue
	else

#level 4:  check for datatype

		if [[ $val =~ ^[0-9]+$ ]] && [[ $dt == "int" ]]
		then
		echo "matched int"
		elif [[ $val =~ [^0-9]+$ ]] && [[ $dt == "string" ]]
		then echo "matched string"
		else
		echo "ERROR :data type is wrong"
		continue
		fi
########################$$$$$$check if change is in id & value exists $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 for ((i=0 ; i< `echo ${#pk[@]}` ; i++ ))
                do
                  	if [ $val == "${pk[i]}" ]
                        then
                        	echo "ERROR : duplicated id value"
				continue
				fi
done

##############$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$4
#level 5 : check for id existence
		for ((i=0 ; i< `echo ${#pk[@]}` ; i++ ))
        	do
          		if [ $id == "${pk[i]}" ]
                	then
			echo "$id pk found"
			let c=$c+1
			#export table col id val
			awk -v COL=$col -v ID=$id -v V="$val" 'BEGIN {FS=",";OFS=FS} {if(ID==$1){echo "before";$COL=V;echo "after"};print $0}' $table>buffer
			cat buffer > $table
			rm buffer
			fi
		  done
                  if [ $c == "0" ]
        	  then
		  echo "ERROR : sorry,$id not exists"
		  continue
		  fi
	fi

     else
     echo "ERROR : empty values is not allowed"
     fi
else echo "ERROR :$table not exist"
fi
done




